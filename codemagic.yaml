workflows:
  native-android:
    name: Snake Game Android (Fixed)
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        PACKAGE_NAME: "com.termux.snake"
      java: 17
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.android/build-cache
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
    scripts:
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
          
      - name: Install correct build tools for AAPT2 compatibility
        script: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platforms;android-33"
          
      - name: Debugging and Build
        script: |
          set -x # Enable shell debugging
          cd $CM_BUILD_DIR
          echo "=== Starting Debugging and Build Process ==="
          echo "Current directory: $(pwd)"
          ls -laR . # List all files recursively in the project root

          echo "--- Checking Gradle Wrapper ---"
          if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "Gradle wrapper jar not found. Attempting to regenerate..."
            # Check if 'gradle' command is available
            if command -v gradle &> /dev/null; then
              gradle wrapper --gradle-version=8.4
              chmod +x gradlew
              echo "Gradle wrapper regeneration command executed."
            else
              echo "Error: 'gradle' command not found. Cannot regenerate wrapper."
              exit 1 # Exit if gradle command is not available
            fi
          else
            echo "Gradle wrapper jar exists."
          fi

          echo "--- After Wrapper Check ---"
          ls -la gradle/wrapper/ # List contents of gradle/wrapper
          ls -la gradlew # List gradlew script

          echo "--- Attempting Build ---"
          echo "--- Checking AAPT2 Version ---"
          # Find aapt2 executable and print its version
          AAPT2_PATH="$(find $ANDROID_SDK_ROOT -name aapt2 -type f | head -n 1)"
          if [ -n "$AAPT2_PATH" ]; then
            echo "Found aapt2 at: $AAPT2_PATH"
            "$AAPT2_PATH" version
          else
            echo "AAPT2 executable not found in Android SDK."
          fi
          echo "--- Attempting build with gradlew..."
          ./gradlew assembleDebug --no-daemon --stacktrace
          echo "=== Build Attempt Finished ==="
          
    artifacts:
      - app/build/outputs/**/*.apk
      
    publishing:
      email:
        recipients:
          - jd21hinman@gmail.com
        notify:
          success: true
          failure: true

  android-wrapper-regen:
    name: Snake Game Android (Wrapper Regeneration)
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        PACKAGE_NAME: "com.termux.snake"
      java: 17
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.android/build-cache
    scripts:
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
          
      - name: Install correct build tools for AAPT2 compatibility
        script: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platforms;android-33"
          
      - name: Regenerate Gradle wrapper on Codemagic
        script: |
          cd $CM_BUILD_DIR
          gradle wrapper --gradle-version=8.4
          chmod +x gradlew
          
      - name: Build debug APK with regenerated wrapper
        script: | 
          cd $CM_BUILD_DIR
          ./gradlew assembleDebug --no-daemon --stacktrace
          
    artifacts:
      - app/build/outputs/**/*.apk
      
    publishing:
      email:
        recipients:
          - jd21hinman@gmail.com
        notify:
          success: true
          failure: true

  android-no-wrapper:
    name: Snake Game Android (No Wrapper)
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        PACKAGE_NAME: "com.termux.snake"
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8"
      java: 17
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.android/build-cache
    scripts:
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
          
      - name: Install correct build tools for AAPT2 compatibility
        script: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platforms;android-33"
          
      - name: Build debug APK using system Gradle
        script: | 
          cd $CM_BUILD_DIR
          gradle assembleDebug --no-daemon --stacktrace --info
          
    artifacts:
      - app/build/outputs/**/*.apk
      
    publishing:
      email:
        recipients:
          - jd21hinman@gmail.com
        notify:
          success: true
          failure: true